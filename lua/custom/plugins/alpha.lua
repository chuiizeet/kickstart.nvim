-- Alpha.nvim setup con Jolteon el√©ctrico y degradado amarillo-naranja

return {
  'goolord/alpha-nvim',
  dependencies = { 'nvim-tree/nvim-web-devicons' },
  config = function()
    local alpha = require 'alpha'
    local dashboard = require 'alpha.themes.dashboard'

    -- ‚ö° Jolteon ASCII Art Header - Energ√≠a el√©ctrica pura
    dashboard.section.header.val = {
      '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£§‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä',
      '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢±‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£ø‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä',
      '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢ø‚£¶‚°Ä‚†Ä‚†Ä‚¢Ä‚†Ä‚¢†‚£ø‚£∑‚†Ä‚£á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä',
      '‚†Ä‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢¢‚£∏‚£ø‚£∑‚£Ñ‚†Ä‚†∏‚°Ñ‚¢∏‚£ø‚£ø‚°Ü‚£ø‚°Ä‚†Ä‚†ò‚°¢‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚°ø‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚£†‚°á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä',
      '‚†Ä‚†à‚¢ª‚£∂‚£§‚°Ä‚†Ä‚†Ä‚†Ä‚¢ª‚£ø‚£ø‚£ø‚£ß‚°Ä‚£ø‚£æ‚£ø‚£ø‚£ø‚£ø‚£ß‚†Ä‚†Ä‚¢É‚†à‚†¢‚°Ä‚†Ä‚¢∞‚°Ä‚¢∞‚†Ä‚¢≥‚†Ä‚†Ä‚†Ä‚°Ä‚†Ä‚†Ä‚£†‚†Ä‚£¥‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä',
      '‚†Ä‚†Ä‚†Ä‚†π‚£ø‚£ø‚£∑‚£¶‚£Ñ‚†Ä‚¢ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ø‚†ô‚¢∑‚£¶‚£ò‚°Ä‚†Ä‚†à‚†¢‚£∏‚†ê‚†å‚†Ä‚†Ä‚¢á‚†Ä‚°î‚°á‚¢Ä‚†ú‚£ß‚°æ‚†É‚£ø‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä',
      '‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚¢ª‚£ø‚£ø‚£ø‚£ø‚£∂‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£á‚†Ä‚†à‚†ª‚£∑‚£Ñ‚°Ä‚†Ä‚†à‚†Ä‚†Ä‚£Ü‚†Ä‚†ò‚†ú‚†Ä‚°ß‚†Å‚£∞‚°ü‚†Å‚¢∞‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä',
      '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ô‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ü‚†Ä‚†Ä‚†à‚†ª‚£∑‚£Ñ‚†Ä‚†Ä‚†Ä‚£ø‚£¶‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚°ü‚†Ä‚†Ä‚£º‚†á‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä',
      '‚†Ä‚£Ä‚£Ä‚£Ä‚£à‚£ë‚£≤‚£¨‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ø‚£ø‚£Ü‚†Ä‚†Ä‚†Ä‚†à‚¢ø‚°Ü‚¢¶‚°Ä‚¢∏‚£ø‚£ß‚¢∏‚£Ü‚†Ä‚£∏‚†É‚†Ä‚£∏‚¢ã‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä',
      '‚†Ä‚†Ä‚†â‚†õ‚†ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£Ñ‚†Ä‚†â‚†≥‚£¶‚°Ä‚†Ä‚†à‚£ø‚£æ‚£ø‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£è‚¢Ä‚£ú‚†â‚†å‚†Ä‚¢Ç‚†ú‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä',
      '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢Ä‚£â‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ø‚£â‚†ô‚†õ‚†õ‚†ì‚†Ä‚†Ä‚†à‚¢ø‚£¶‚£ø‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°Ø‚†Ä‚†Ä‚°†‚†ã‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä',
      '‚†Ä‚†Ä‚†Ä‚†à‚†â‚¢â‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚£Ä‚†Ä‚†Ä‚†Ä‚¢à‚£Ω‚£ø‚£ø‚°ø‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£á‚¢Ä‚†û‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä',
      '‚†Ä‚†Ä‚†Ä‚£Ä‚£†‚£æ‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ü‚†õ‚£ø‚£ø‚£ø‚£ø‚£Ø‚£ç‚£â‚°Å‚†Ä‚†Ä‚£∞‚¢ø‚£ø‚£ø‚£ß‚†Ä‚†à‚†ô‚¢ø‚£ø‚£ø‚£ø‚£ø‚†è‚†Å‚°è‚†ì‚†í‚¢Ä‚°†‚†Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä',
      '‚†Ä‚†Ä‚¢∞‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ã‚†Ä‚†Ä‚£ø‚£ø‚£ø‚£ø‚°ø‚†ü‚†ã‚£Ä‚°Ä‚†Ä‚¢Å‚£ø‚£ø‚£ø‚£ø‚£∂‚£§‚£§‚£º‚£ø‚£ø‚£ø‚£ø‚£§‚£º‚°á‚†Ä‚†ò‚¢ß‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä',
      '‚†Ä‚†Ä‚£º‚£ø‚£ø‚£ø‚£ø‚£ø‚†ø‚†ü‚†õ‚†Å‚†Ä‚†Ä‚£∞‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†è‚†Ä‚†Ä‚†∏‚†ü‚°Ω‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£Ø‚£ø‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†â‚†¢‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä',
      '‚†Ä‚¢Ä‚£ø‚£ø‚£ø‚°ø‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚°ø‚†Å‚†Ä‚¢Ä‚£†‚†Ñ‚†Ä‚†Å‚†ü‚†ã‚†õ‚†ª‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†ü‚†Å‚¢†‚°¨‚†Ω‚†Ø‚†≠‚†â‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä',
      '‚†Ä‚£º‚£ø‚£ø‚£ø‚†É‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚£ø‚£ø‚£ø‚¢è‚£†‚£¥‚†æ‚¢ã‚°¶‚°æ‚†Ä‚†Ä‚†Ä‚†Ä‚°Ä‚†Ä‚†à‚†â‚†õ‚†õ‚†õ‚¢Å‚†Ä‚†Ä‚†Ä‚†≥‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä',
      '‚¢†‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚£ø‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†ä‚¢†‚†É‚†Ä‚¢Ä‚†Ñ‚†∫‚°∞‚°á‚†Ä‚°∞‚†£‚°Ä‚£∏‚£Æ‚£ø‚£∂‚£¶‚£Ñ‚°±‚£Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä',
      '‚¢∏‚£ø‚£ø‚£ø‚£ø‚£∑‚°Ñ‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†∏‚£ø‚£ø‚£ø‚£ø‚£ø‚†Ä‚†Ä‚°ú‚°†‚†í‚†Å‚†Ä‚†ã‚†Ä‚£á‚°ú‚†Ä‚†Ä‚†±‚°è‚†ô‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£¶‚°Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä',
      '‚†Ä‚†ô‚†õ‚†õ‚†õ‚†â‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚¢º‚£ø‚£ø‚£ø‚£∑‚°Ä‚†ê‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£∑‚£§‚£Ä‚†Ä‚†Ä‚†Ä‚†Ä',
      '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†ò‚¢ø‚£ø‚£ø‚£ø‚£ø‚†Ü‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ª‚¢ø‚£ø‚£ø‚£ø‚£ø‚£ø‚£∂‚£¶‚°Ä',
      '‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†à‚†Å‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†Ä‚†â‚†ª‚¢ø‚£ø‚†ø‚†ø‚†õ‚†Å',
      '',
      '              üíõ TCGDex to the moon üíõ',
      '',
    }

    -- ‚ö° Botones tem√°ticos el√©ctricos de Jolteon
    dashboard.section.buttons.val = {
      dashboard.button('f', '‚ö°   Search', ':Telescope find_files<CR>'),
      dashboard.button('r', 'üåü   History', ':Telescope oldfiles<CR>'),
      dashboard.button('n', '‚ú®  Generate File', ':ene <BAR> startinsert<CR>'),
      dashboard.button('u', 'üîã  Plugins', ':Lazy update<CR>'),
      dashboard.button('q', 'üí´  Bye bye', ':qa<CR>'),
    }

    -- üß† Funci√≥n mejorada para obtener estad√≠sticas m√°s precisas
    local function get_enhanced_stats()
      -- M√©todo 1: Lazy.nvim stats
      local lazy_stats = { count = 0, loaded = 0, startup_time = 0 }
      local ok, lazy = pcall(require, 'lazy')
      if ok and type(lazy) == 'table' and type(lazy.stats) == 'function' then
        local stats = lazy.stats()
        lazy_stats = {
          count = stats.count or 0,
          loaded = stats.loaded or 0,
          startup_time = math.max(stats.startuptime or 0, stats.startup_time or 0),
        }
      end

      -- M√©todo 2: Tiempo desde vim.fn.reltime() si est√° disponible
      local vim_startup_time = 0
      if vim.fn.has 'reltime' == 1 and vim.g.start_time then
        vim_startup_time = vim.fn.reltimefloat(vim.fn.reltime(vim.g.start_time)) * 1000
      end

      -- M√©todo 3: Usar luv.uptime() como alternativa
      local uptime_ms = 0
      local uv = vim.loop or vim.uv
      if uv and uv.uptime then
        uptime_ms = uv.uptime() * 1000
      end

      return {
        lazy = lazy_stats,
        vim_time = vim_startup_time,
        uptime = uptime_ms,
      }
    end

    -- ‚ö° Footer din√°mico con tem√°tica el√©ctrica de Jolteon
    local function create_footer()
      local stats = get_enhanced_stats()
      local footer_lines = {
        '‚ö° Make beautiful thigs! ‚ö°',
      }

      -- Plugins info con terminolog√≠a el√©ctrica
      if stats.lazy.count > 0 then
        local loaded_text = stats.lazy.loaded > 0 and string.format('üîã %d/%d electric powers active', stats.lazy.loaded, stats.lazy.count)
          or string.format('üí° %d lightning abilities learned', stats.lazy.count)
        table.insert(footer_lines, loaded_text)
      end

      -- Tiempo de carga (priorizar el m√°s preciso)
      local startup_time = 0
      local time_source = ''

      if stats.lazy.startup_time > 0 then
        startup_time = stats.lazy.startup_time
        time_source = 'lazy'
      elseif stats.vim_time > 0 then
        startup_time = stats.vim_time
        time_source = 'vim'
      elseif stats.uptime > 0 and stats.uptime < 10000 then -- Solo si es < 10s
        startup_time = stats.uptime
        time_source = 'uptime'
      end

      if startup_time > 0 then
        local time_text = startup_time < 1 and string.format('‚ö° Lightning strike in %.2fms (%s)', startup_time, time_source)
          or string.format('‚ö° Lightning strike in %.0fms (%s)', startup_time, time_source)
        table.insert(footer_lines, time_text)
      else
        table.insert(footer_lines, 'üí´ Instant electric shock! (< 1ms)')
      end

      -- Info adicional con energ√≠a el√©ctrica
      table.insert(footer_lines, string.format('üéØ Neovim %s', vim.version().major .. '.' .. vim.version().minor))

      return footer_lines
    end

    dashboard.section.footer.val = create_footer()

    -- ‚ö° Degradado amarillo-naranja el√©ctrico perfecto para Jolteon
    vim.cmd [[
      " Degradado amarillo-naranja el√©ctrico y energ√©tico
      highlight JolteonLightYellow guifg=#FFFACD gui=bold
      highlight JolteonYellow guifg=#FFFF00 gui=bold
      highlight JolteonGold guifg=#FFD700 gui=bold
      highlight JolteonAmber guifg=#FFC000 gui=bold
      highlight JolteonOrange guifg=#FFA500 gui=bold
      highlight JolteonDarkOrange guifg=#FF8C00 gui=bold
      highlight JolteonTangerine guifg=#FF7F00 gui=bold
      highlight JolteonElectric guifg=#FF6600 gui=bold
      highlight JolteonDeepOrange guifg=#FF4500 gui=bold
      highlight JolteonFireOrange guifg=#FF2500 gui=bold
      
      " Efectos especiales el√©ctricos
      highlight JolteonSpark guifg=#FFFF00 gui=bold,italic
      highlight JolteonBolt guifg=#FFC000 gui=bold,underline
      highlight JolteonThunder guifg=#FF8C00 gui=bold,italic
      highlight JolteonEnergy guifg=#FF6600 gui=bold
      highlight JolteonGlow guifg=#FFFACD gui=bold,italic
      
      " Footer y botones con m√°xima energ√≠a
      highlight AlphaFooter guifg=#FFA500 gui=italic
      highlight AlphaButtons guifg=#FF8C00 gui=bold
      highlight AlphaHeader guifg=#FFC000 gui=bold
    ]]

    dashboard.section.header.opts.hl = 'AlphaHeader'
    dashboard.section.footer.opts.hl = 'AlphaFooter'
    dashboard.section.buttons.opts.hl = 'AlphaButtons'

    alpha.setup(dashboard.opts)

    -- üîÑ Refresh footer cuando se carguen plugins
    vim.api.nvim_create_autocmd('User', {
      pattern = 'LazyVimStarted',
      callback = function()
        dashboard.section.footer.val = create_footer()
        pcall(alpha.redraw)
      end,
    })

    -- ‚ö° Mantener la energ√≠a el√©ctrica
    vim.api.nvim_create_autocmd('ColorScheme', {
      callback = function()
        vim.cmd [[
          highlight JolteonLightYellow guifg=#FFFACD gui=bold
          highlight JolteonYellow guifg=#FFFF00 gui=bold
          highlight JolteonGold guifg=#FFD700 gui=bold
          highlight JolteonAmber guifg=#FFC000 gui=bold
          highlight JolteonOrange guifg=#FFA500 gui=bold
          highlight JolteonDarkOrange guifg=#FF8C00 gui=bold
          highlight JolteonTangerine guifg=#FF7F00 gui=bold
          highlight JolteonElectric guifg=#FF6600 gui=bold
          highlight JolteonDeepOrange guifg=#FF4500 gui=bold
          highlight JolteonFireOrange guifg=#FF2500 gui=bold
          highlight JolteonSpark guifg=#FFFF00 gui=bold,italic
          highlight JolteonBolt guifg=#FFC000 gui=bold,underline
          highlight JolteonThunder guifg=#FF8C00 gui=bold,italic
          highlight JolteonEnergy guifg=#FF6600 gui=bold
          highlight JolteonGlow guifg=#FFFACD gui=bold,italic
          highlight AlphaFooter guifg=#FFA500 gui=italic
          highlight AlphaButtons guifg=#FF8C00 gui=bold
          highlight AlphaHeader guifg=#FFC000 gui=bold
        ]]
      end,
    })

    -- ‚ö° Efecto de descarga el√©ctrica al iniciar
    vim.api.nvim_create_autocmd('VimEnter', {
      callback = function()
        if vim.fn.argc() == 0 then
          vim.defer_fn(function()
            vim.cmd 'echo "‚ö° Jolteon unleashes a powerful Thunder Shock! Your editor is now charged! ‚ö°"'
          end, 100)
        end
      end,
    })

    -- üí° Efecto de "chispa el√©ctrica" din√°mico
    local jolteon_electric_colors = { 'JolteonAmber', 'JolteonOrange', 'JolteonElectric' }
    local color_index = 1

    vim.api.nvim_create_autocmd('CursorHold', {
      callback = function()
        if vim.bo.filetype == 'alpha' then
          dashboard.section.header.opts.hl = jolteon_electric_colors[color_index]
          color_index = color_index % #jolteon_electric_colors + 1
          pcall(alpha.redraw)
        end
      end,
    })

    -- ‚ö° Efecto de rayo ocasional (brillo s√∫per intenso)
    vim.api.nvim_create_autocmd('CursorMoved', {
      callback = function()
        if vim.bo.filetype == 'alpha' and math.random(150) == 77 then
          dashboard.section.header.opts.hl = 'JolteonSpark'
          vim.defer_fn(function()
            dashboard.section.header.opts.hl = 'JolteonAmber'
            pcall(alpha.redraw)
          end, 150)
        end
      end,
    })

    -- üåü Efecto de "Pin Missile" de colores (muy ocasional)
    vim.api.nvim_create_autocmd('InsertEnter', {
      callback = function()
        if math.random(100) == 25 then
          local flash_colors = { 'JolteonYellow', 'JolteonGold', 'JolteonOrange', 'JolteonElectric' }
          for i, color in ipairs(flash_colors) do
            vim.defer_fn(function()
              if vim.bo.filetype == 'alpha' then
                dashboard.section.header.opts.hl = color
                pcall(alpha.redraw)
              end
            end, i * 100)
          end
          vim.defer_fn(function()
            dashboard.section.header.opts.hl = 'JolteonAmber'
            pcall(alpha.redraw)
          end, 500)
        end
      end,
    })
  end,
}
